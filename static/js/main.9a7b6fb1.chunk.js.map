{"version":3,"sources":["index.js"],"names":["blueBar","process","imgX","imgO","Square","xIsNext","modifyXIsnext","index","changeList","winner","list","useState","value","setValue","useEffect","every","element","className","onClick","src","listaRisultati","Board","status","setxIsNext","Array","fill","squares","setSquares","handlePlayerChange","handleListChange","val","map","e","i","calculateWinner","push","style","marginTop","id","length","Game","document","title","getElementById","href","lines","a","b","c","ReactDOM","render"],"mappings":"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","file":"static/js/main.9a7b6fb1.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\n\nconst blueBar = process.env.PUBLIC_URL + \"/assets/barra.png\"\nconst favicon = process.env.PUBLIC_URL + \"/assets/favicon.ico\"\nconst logo = process.env.PUBLIC_URL + \"/assets/logo.jpg\"\nconst imgX = process.env.PUBLIC_URL + \"/assets/x.png\"\nconst imgO = process.env.PUBLIC_URL + \"/assets/o.png\"\nconst restart = process.env.PUBLIC_URL + \"/assets/restart.png\"\n\nconst Square = ({ xIsNext, modifyXIsnext, index, changeList, winner, list }) => {\n\n    const [ value, setValue ] = useState(null);\n    useEffect(\n        () => {\n            if (list.every((element) => element === null)) {\n                setValue(null);\n            }\n        },\n        [ list, value ]\n    );\n\n    const cambiaGiocatore = () => {\n        //controllo che la casella non sia gi√† stata cliccata\n        if (!value && !winner) {\n            setValue(xIsNext ? 'X' : 'O');\n            changeList(index - 1, xIsNext ? 'X' : 'O');\n            //cambio il valore di xIsNext\n            modifyXIsnext();\n        }\n    };\n    return (\n        <zoomIn><button className=\"square\" onClick={cambiaGiocatore}>\n            {\n            value === \"X\" ? \n              <zoomIn><img className=\"movesGrid\" src={imgX}></img></zoomIn>: \n              value === \"O\" ? \n                <img className=\"movesGrid\" src={imgO}></img>: \n                value\n            }\n        </button></zoomIn>\n    );\n};\nlet listaRisultati = [];\nconst Board = () => {\n    const [ xIsNext, setxIsNext ] = useState(true);\n    const [ squares, setSquares ] = useState(Array(9).fill(null));\n\n    const handlePlayerChange = () => {\n        setxIsNext(!xIsNext);\n    };\n    const handleListChange = (index, val) => {\n        if (!winner) {\n            setSquares(\n                squares.map((e, i) => {\n                    if (index === i) {\n                        e = val;\n                    }\n                    return e;\n                })\n            );\n        }\n    };\n    const ricomincia = () => {\n        setSquares(Array(9).fill(null));\n        setxIsNext(true);\n    };\n    let status;\n    const winner = calculateWinner(squares);\n    if (winner && winner !== true) {\n        status = <div>Vincitore: {winner === \"X\" ? <img className=\"moves\" src={imgX}></img> : <img className=\"moves\" src={imgO}></img>}</div>;\n        if (winner === 'X') {\n            listaRisultati.push(0);\n        } else {\n            listaRisultati.push(1);\n        }\n    } else if (winner === null) {\n        status = <div>Prossimo giocatore: {xIsNext ? <img className=\"moves\" src={imgX}></img> : <img className=\"moves\" src={imgO}></img>}</div>;\n    } else {\n        status = <div style={{marginTop:\"28px\"}}>Nessun giocatore ha vinto </div>;\n        listaRisultati.push(3);\n    }\n    for (let i = 0; i < 9; i++) {\n        <div>\n            <Square\n                xIsNext={xIsNext}\n                modifyXIsnext={handlePlayerChange}\n                index={i}\n                changeList={handleListChange}\n                winner={winner}\n                list={squares}\n            />\n        </div>;\n    }\n    return (\n        <div>\n            <div className=\"status\">\n              {status}\n            </div>\n            <img src={blueBar} className=\"blueBar\"></img>\n            <div id=\"grid\">\n            <div className=\"board-row\">\n                <Square\n                    xIsNext={xIsNext}\n                    modifyXIsnext={handlePlayerChange}\n                    index={1}\n                    changeList={handleListChange}\n                    winner={winner}\n                    list={squares}\n                />\n                <Square\n                    xIsNext={xIsNext}\n                    modifyXIsnext={handlePlayerChange}\n                    index={2}\n                    changeList={handleListChange}\n                    winner={winner}\n                    list={squares}\n                />\n                <Square\n                    xIsNext={xIsNext}\n                    modifyXIsnext={handlePlayerChange}\n                    index={3}\n                    changeList={handleListChange}\n                    winner={winner}\n                    list={squares}\n                />\n            </div>\n            <div className=\"board-row\">\n                <Square\n                    xIsNext={xIsNext}\n                    modifyXIsnext={handlePlayerChange}\n                    index={4}\n                    changeList={handleListChange}\n                    winner={winner}\n                    list={squares}\n                />\n                <Square\n                    xIsNext={xIsNext}\n                    modifyXIsnext={handlePlayerChange}\n                    index={5}\n                    changeList={handleListChange}\n                    winner={winner}\n                    list={squares}\n                />\n                <Square\n                    xIsNext={xIsNext}\n                    modifyXIsnext={handlePlayerChange}\n                    index={6}\n                    changeList={handleListChange}\n                    winner={winner}\n                    list={squares}\n                />\n            </div>\n            <div className=\"board-row\">\n                <Square\n                    xIsNext={xIsNext}\n                    modifyXIsnext={handlePlayerChange}\n                    index={7}\n                    changeList={handleListChange}\n                    winner={winner}\n                    list={squares}\n                />\n                <Square\n                    xIsNext={xIsNext}\n                    modifyXIsnext={handlePlayerChange}\n                    index={8}\n                    changeList={handleListChange}\n                    winner={winner}\n                    list={squares}\n                />\n                <Square\n                    xIsNext={xIsNext}\n                    modifyXIsnext={handlePlayerChange}\n                    index={9}\n                    changeList={handleListChange}\n                    winner={winner}\n                    list={squares}\n                />\n            </div>\n            </div>\n            <img src={blueBar} className=\"blueBar\"></img>\n            <div id=\"restart-container\">\n              <button id=\"restart-button\" onClick={() => ricomincia()}>\n                  <img id=\"restart\" src={restart}></img>\n              </button>\n            </div>\n            \n            {listaRisultati.length > 0 ?\n              <div className=\"lista-risultati\">\n                <h2>Storico partite:</h2>\n                {\n                listaRisultati.map((e, i) => {\n                    if (e === 0) {\n                        return <p>{i + 1}. Il giocatore X ha vinto</p>;\n                    } else if (e === 1) {\n                        return <p> {i + 1}. Il giocatore O ha vinto</p>;\n                    } else {\n                        return <p> {i + 1}. Nessuno ha vinto</p>;\n                    }\n                })\n                }\n              </div> : null\n            }\n                \n        </div>\n    );\n};\nconst Game = () => {\n    document.title = \"Tris - by KMZ\"\n    document.getElementById(\"favicon\").href = favicon\n    return (\n        <div>\n            <div className=\"title\">\n                <img src={logo} id=\"logo\"></img>\n            </div>\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board />\n                </div>\n            </div>\n        </div>\n    );\n};\n// ========================================\nconst calculateWinner = (squares) => {\n    const lines = [\n        [ 0, 1, 2 ],\n        [ 3, 4, 5 ],\n        [ 6, 7, 8 ],\n        [ 0, 3, 6 ],\n        [ 1, 4, 7 ],\n        [ 2, 5, 8 ],\n        [ 0, 4, 8 ],\n        [ 2, 4, 6 ]\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [ a, b, c ] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a];\n        }\n    }\n    if (squares.every((element) => element !== null)) {\n        return undefined;\n    }\n    return null;\n};\n\nReactDOM.render(<Game />, document.getElementById('root'));"],"sourceRoot":""}